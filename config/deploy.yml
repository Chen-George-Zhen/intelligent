# Name of your application. Used to uniquely configure containers.
service: intelligent

# Name of the container image.
image: george2chen/intelligent

# Deploy to these servers.
servers:
  - 107.172.60.59

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: george2chen

  # Always use an access token rather than real password when possible.
  password:
    - MRSK_REGISTRY_PASSWORD

env:
  clear:
    DB_HOST: 107.172.60.59
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - INTELLIGENT_DATABASE_URL
    - REDIS_URL

accessories:
  db:
    image: postgres:15
    host: 107.172.60.59
    port: 5432
    env:
      clear:
      secret:
        - POSTGRES_USER
        - POSTGRES_PASSWORD
        - POSTGRES_DB
    directories:
      - data:/var/lib/postgresql/data
  redis:
    image: redis:7.0
    host: 107.172.60.59
    port: 6379
    directories:
      - data:/data

# Inject ENV variables into containers (secrets come from .env).
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql.erb:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000
